"""
–ê–≤—Ç–æ—Ä: –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –û–¥–∏–Ω—Ü–æ–≤
e-mail: kos5172@yandex.ru
Github: https://github.com/odintsovkos
–≠—Ç–æ—Ç —Ñ–∞–π–ª ‚Äî —á–∞—Å—Ç—å SDTelegramBot.

SDTelegramBot ‚Äî —Å–≤–æ–±–æ–¥–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞: –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –µ–µ –∏/–∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –µ–µ –Ω–∞ —É—Å–ª–æ–≤–∏—è—Ö –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏ GNU –≤ —Ç–æ–º –≤–∏–¥–µ, –≤ –∫–∞–∫–æ–º –æ–Ω–∞ –±—ã–ª–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –§–æ–Ω–¥–æ–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è; –ª–∏–±–æ –≤–µ—Ä—Å–∏–∏ 3 –ª–∏—Ü–µ–Ω–∑–∏–∏, –ª–∏–±–æ (–ø–æ –≤–∞—à–µ–º—É –≤—ã–±–æ—Ä—É) –ª—é–±–æ–π –±–æ–ª–µ–µ –ø–æ–∑–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏.

SDTelegramBot —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –Ω–∞–¥–µ–∂–¥–µ, —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–æ–π, –Ω–æ –ë–ï–ó–û –í–°–Ø–ö–ò–• –ì–ê–†–ê–ù–¢–ò–ô; –¥–∞–∂–µ –±–µ–∑ –Ω–µ—è–≤–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ –¢–û–í–ê–†–ù–û–ì–û –í–ò–î–ê –∏–ª–∏ –ü–†–ò–ì–û–î–ù–û–°–¢–ò –î–õ–Ø –û–ü–†–ï–î–ï–õ–ï–ù–ù–´–• –¶–ï–õ–ï–ô. –ü–æ–¥—Ä–æ–±–Ω–µ–µ —Å–º. –≤ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏ GNU.

–í—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ø–∏—é –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏ GNU –≤–º–µ—Å—Ç–µ —Å —ç—Ç–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–∞–∫, —Å–º. <https://www.gnu.org/licenses/>.

–≠—Ç–∞ —á–∞—Å—Ç—å –∫–æ–¥–∞ –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–Ω–∞ –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª–µ–º daswer123
"""



from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import Message

from keyboards.default import keyboards
from keyboards.inline.inline_menu import inline_cancel, create_ad_model_keyboard, adetailer_menu, settings_menu
from loader import dp
from states.all_states import SDStates
import settings.string_variables as str_var
from utils.db_services import db_service

callback_data = None

@dp.message_handler(state=SDStates.ad_settings, content_types=types.ContentTypes.TEXT)
async def settings_buttons_handler(message: types.Message):
    current_settings = await db_service.db_get_sd_settings(message.from_user.id)
    if message.text == str_var.ad_on_off:
        await message.answer(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: "
                             f"Adetailer - {'–í–∫–ª—é—á–µ–Ω' if current_settings['ad_on_off'] == 1 else '–û—Ç–∫–ª—é—á–µ–Ω'}\n"
                             f"‚úèÔ∏è –í–≤–µ–¥–∏ 1 - –í–∫–ª. –∏–ª–∏ 0 - –í—ã–∫–ª.", reply_markup=keyboards.cancel)
        await SDStates.ad_on_off.set()


@dp.callback_query_handler(state=[SDStates.ad_settings], text='cancel')
async def generation_settings(callback: types.CallbackQuery):
    await callback.message.edit_text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", reply_markup=settings_menu)
    await SDStates.settings.set()


@dp.callback_query_handler(state=[SDStates.ad_on_off,
                                  SDStates.ad_set_prompt,
                                  SDStates.ad_set_neg_prompt,
                                  SDStates.ad_set_confidence,
                                  SDStates.ad_set_mask_blur,
                                  SDStates.ad_set_denoising_strength,
                                  SDStates.ad_set_wh,
                                  SDStates.ad_set_steps,
                                  SDStates.ad_change_model,], text='cancel')
async def generation_settings(callback: types.CallbackQuery):
    await callback.message.edit_text("üë© –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Adetailer", reply_markup=adetailer_menu)
    await SDStates.ad_settings.set()


@dp.message_handler(state=SDStates.ad_on_off, content_types=types.ContentTypes.TEXT)
async def ad_on_off_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_on_off", message.text)
    await callback_data.message.edit_text(f"Adetailer - {'–í–∫–ª—é—á–µ–Ω' if int(message.text) == 1 else '–û—Ç–∫–ª—é—á–µ–Ω'}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()


@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_on_off')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    await callback.message.edit_text(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: "
                                     f"Adetailer - {'–í–∫–ª—é—á–µ–Ω' if current_settings['ad_on_off'] == 1 else '–û—Ç–∫–ª—é—á–µ–Ω'}\n"
                                     f"‚úèÔ∏è –í–≤–µ–¥–∏ 1 - –í–∫–ª. –∏–ª–∏ 0 - –í—ã–∫–ª.", reply_markup=inline_cancel)
    await SDStates.ad_on_off.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ad_model
@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_model')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    ad_model_keyboard = await create_ad_model_keyboard()
    await callback.message.edit_text(f"–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å Adetailer: "
                                     f"{current_settings['ad_model']}\n"
                                     f"‚úèÔ∏è –í—ã–±–µ—Ä–∏ –ú–æ–¥–µ–ª—å", reply_markup=ad_model_keyboard)
    await SDStates.ad_change_model.set()

@dp.message_handler(state=SDStates.ad_change_model, content_types=types.ContentTypes.TEXT)
async def ad_model_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_model", message.text)
    await callback_data.message.edit_text(f"–ú–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {message.text}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()

@dp.callback_query_handler(Text(startswith="ad_model_"), state=SDStates.ad_change_model)
async def current_settings(callback: types.CallbackQuery):
    action = callback.data[9:]
    await db_service.db_set_sd_settings(callback.from_user.id, "ad_model", action)
    await callback.message.edit_text(f"<b>Model \"{action}\" –∑–∞–¥–∞–Ω</b>", reply_markup=adetailer_menu)
    await SDStates.ad_settings.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ad_prompt
@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_prompt')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    await callback.message.edit_text(f"–¢–µ–∫—É—â–∏–π Prompt: {current_settings['ad_prompt']}\n"
                                     f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ prompt –¥–ª—è Adetailer", reply_markup=inline_cancel)
    await SDStates.ad_set_prompt.set()

@dp.message_handler(state=SDStates.ad_set_prompt, content_types=types.ContentTypes.TEXT)
async def ad_prompt_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_prompt", message.text)
    await callback_data.message.edit_text(f"Prompt –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {message.text}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ad_neg_prompt
@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_neg_prompt')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    await callback.message.edit_text(f"–¢–µ–∫—É—â–∏–π negative prompt: {current_settings['ad_negative_prompt']}\n"
                                     f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ negative prompt", reply_markup=inline_cancel)
    await SDStates.ad_set_neg_prompt.set()

@dp.message_handler(state=SDStates.ad_set_neg_prompt, content_types=types.ContentTypes.TEXT)
async def ad_neg_prompt_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_negative_prompt", message.text)
    await callback_data.message.edit_text(f"Negative prompt –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {message.text}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ad_confidence
@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_confidence')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    await callback.message.edit_text(f"–¢–µ–∫—É—â–∞—è —Å–∏–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–∏—Ü–∞: {current_settings['ad_confidence']}\n"
                                     f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å–∏–ª—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–∏—Ü–∞", reply_markup=inline_cancel)
    await SDStates.ad_set_confidence.set()

@dp.message_handler(state=SDStates.ad_set_confidence, content_types=types.ContentTypes.TEXT)
async def ad_confidence_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_confidence", message.text)
    await callback_data.message.edit_text(f"–°–∏–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–∏—Ü–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {message.text}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ad_mask_blur
@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_mask_blur')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    await callback.message.edit_text(f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Mask Blur: {current_settings['ad_mask_blur']}\n"
                                     f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è Mask Blur", reply_markup=inline_cancel)
    await SDStates.ad_set_mask_blur.set()

@dp.message_handler(state=SDStates.ad_set_mask_blur, content_types=types.ContentTypes.TEXT)
async def ad_mask_blur_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_mask_blur", message.text)
    await callback_data.message.edit_text(f"Mask Blur –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {message.text}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ad_denoising_strength
@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_denoising_strength')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    await callback.message.edit_text(f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Denoising Strength: {current_settings['ad_denoising_strength']}\n"
                                     f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è Denoising Strength", reply_markup=inline_cancel)
    await SDStates.ad_set_denoising_strength.set()

@dp.message_handler(state=SDStates.ad_set_denoising_strength, content_types=types.ContentTypes.TEXT)
async def ad_denoising_strength_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_denoising_strength", message.text)
    await callback_data.message.edit_text(f"Denoising Strength –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {message.text}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ad_wh
@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_wh')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    await callback.message.edit_text(f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Width x Height: {current_settings['ad_inpaint_width_height']}\n"
                                     f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è Width x Height, –≤ —Ñ–æ—Ä–º–∞—Ç–µ '—à–∏—Ä–∏–Ω–∞x–≤—ã—Å–æ—Ç–∞'", reply_markup=inline_cancel)
    await SDStates.ad_set_wh.set()

@dp.message_handler(state=SDStates.ad_set_wh, content_types=types.ContentTypes.TEXT)
async def ad_wh_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_inpaint_width_height", message.text)
    await callback_data.message.edit_text(f"Width x Height –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {message.text}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ ad_steps
@dp.callback_query_handler(state=SDStates.ad_settings, text='ad_steps')
async def current_settings(callback: types.CallbackQuery):
    global callback_data
    callback_data = callback
    current_settings = await db_service.db_get_sd_settings(callback.from_user.id)
    await callback.message.edit_text(f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Steps: {current_settings['ad_steps']}\n"
                                     f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è Steps", reply_markup=inline_cancel)
    await SDStates.ad_set_steps.set()

@dp.message_handler(state=SDStates.ad_set_steps, content_types=types.ContentTypes.TEXT)
async def ad_steps_button_handler(message: Message):
    await db_service.db_set_sd_settings(message.from_user.id, "ad_steps", message.text)
    await callback_data.message.edit_text(f"Steps –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {message.text}", reply_markup=adetailer_menu)
    await message.bot.delete_message(message_id=message.message_id, chat_id=message.chat.id)
    await SDStates.ad_settings.set()

"""
–ê–≤—Ç–æ—Ä: –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –û–¥–∏–Ω—Ü–æ–≤
e-mail: kos5172@yandex.ru
Github: https://github.com/odintsovkos
–≠—Ç–æ—Ç —Ñ–∞–π–ª ‚Äî —á–∞—Å—Ç—å SDTelegramBot.

SDTelegramBot ‚Äî —Å–≤–æ–±–æ–¥–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞: –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –µ–µ –∏/–∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å –µ–µ –Ω–∞ —É—Å–ª–æ–≤–∏—è—Ö –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏ GNU –≤ —Ç–æ–º –≤–∏–¥–µ, –≤ –∫–∞–∫–æ–º –æ–Ω–∞ –±—ã–ª–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –§–æ–Ω–¥–æ–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è; –ª–∏–±–æ –≤–µ—Ä—Å–∏–∏ 3 –ª–∏—Ü–µ–Ω–∑–∏–∏, –ª–∏–±–æ (–ø–æ –≤–∞—à–µ–º—É –≤—ã–±–æ—Ä—É) –ª—é–±–æ–π –±–æ–ª–µ–µ –ø–æ–∑–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏.

SDTelegramBot —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –Ω–∞–¥–µ–∂–¥–µ, —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–æ–π, –Ω–æ –ë–ï–ó–û –í–°–Ø–ö–ò–• –ì–ê–†–ê–ù–¢–ò–ô; –¥–∞–∂–µ –±–µ–∑ –Ω–µ—è–≤–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ –¢–û–í–ê–†–ù–û–ì–û –í–ò–î–ê –∏–ª–∏ –ü–†–ò–ì–û–î–ù–û–°–¢–ò –î–õ–Ø –û–ü–†–ï–î–ï–õ–ï–ù–ù–´–• –¶–ï–õ–ï–ô. –ü–æ–¥—Ä–æ–±–Ω–µ–µ —Å–º. –≤ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏ GNU.

–í—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ø–∏—é –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏ GNU –≤–º–µ—Å—Ç–µ —Å —ç—Ç–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–∞–∫, —Å–º. <https://www.gnu.org/licenses/>.
"""


import asyncio
import time

import aiogram

from loader import bot

async def waiting_bar_trascribe_audio(chat_id: int, future):
    list_items = ["üü©", "‚¨úÔ∏è", "‚¨úÔ∏è", "‚¨úÔ∏è", "‚¨úÔ∏è"]
    green_item = "üü©"
    gray_item = "‚¨úÔ∏è"
    num = 0
    direction = True

    upload_message = await bot.send_message(chat_id=chat_id, text=''.join(list_items) + " 0s")
    await asyncio.sleep(0.5)
    last_time = time.time()
    while True:
        if num == 4:
            direction = False
        elif num == 0:
            direction = True
        if direction:
            num += 1
            list_items[num - 1] = gray_item
            list_items[num] = green_item
        else:
            num -= 1
            list_items[num + 1] = gray_item
            list_items[num] = green_item
        if not future.done():
            prog = ''.join(list_items)
            try:
                await upload_message.edit_text(text=prog + f" {round(time.time() - last_time)}s.")
            except aiogram.exceptions.MessageNotModified:
                continue
            await asyncio.sleep(0.2)
        else:
            break
    return upload_message.chat.id, upload_message.message_id


async def waiting_bar(chat_id, thread):
    list_items = ["üü©", "‚¨úÔ∏è", "‚¨úÔ∏è", "‚¨úÔ∏è", "‚¨úÔ∏è"]
    green_item = "üü©"
    gray_item = "‚¨úÔ∏è"
    num = 0
    direction = True

    upload_message = await bot.send_message(chat_id=chat_id, text=''.join(list_items) + " 0s")
    await asyncio.sleep(0.5)
    last_time = time.time()
    while True:
        if num == 4:
            direction = False
        elif num == 0:
            direction = True
        if direction:
            num += 1
            list_items[num - 1] = gray_item
            list_items[num] = green_item
        else:
            num -= 1
            list_items[num + 1] = gray_item
            list_items[num] = green_item
        if thread.is_alive():
            prog = ''.join(list_items)
            try:
                await upload_message.edit_text(text=prog + f" {round(time.time() - last_time)}s.")
            except aiogram.exceptions.MessageNotModified:
                continue
            await asyncio.sleep(0.2)
        else:
            break
    return upload_message.chat.id, upload_message.message_id
